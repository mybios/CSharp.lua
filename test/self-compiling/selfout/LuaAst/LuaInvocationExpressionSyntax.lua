-- Generated by CSharp.lua Compiler
--[[
Copyright 2017 YANG Huan (sy.yanghuan@gmail.com).

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
]]
local System = System
local CSharpLua
local CSharpLuaLuaAst
System.usingDeclare(function (global)
  CSharpLua = global.CSharpLua
  CSharpLuaLuaAst = CSharpLua.LuaAst
end)
System.namespace("CSharpLua.LuaAst", function (namespace)
  namespace.class("LuaInvocationExpressionSyntax", function (namespace)
    local AddArgument, AddArguments, Render, __init__, __ctor1__, __ctor2__, __ctor3__, __ctor4__, 
    __ctor5__, __ctor6__
    __init__ = function (this)
      this.ArgumentList = CSharpLuaLuaAst.LuaArgumentListSyntax()
    end
    __ctor1__ = function (this, expression)
      __init__(this)
      this.__base__.__ctor__(this)
      if expression == nil then
        System.throw(CSharpLua.ArgumentNullException("expression" --[[nameof(expression)]]))
      end
      this.Expression = expression
    end
    __ctor2__ = function (this, expression, argument)
      __ctor1__(this, expression)
      AddArgument(this, argument)
    end
    __ctor3__ = function (this, expression, argument1, argument2)
      __ctor1__(this, expression)
      AddArgument(this, argument1)
      AddArgument(this, argument2)
    end
    __ctor4__ = function (this, expression, argument1, argument2, argument3)
      __ctor1__(this, expression)
      AddArgument(this, argument1)
      AddArgument(this, argument2)
      AddArgument(this, argument3)
    end
    __ctor5__ = function (this, expression, arguments)
      __ctor1__(this, expression)
      AddArguments(this, arguments)
    end
    __ctor6__ = function (this, expression, arguments)
      __ctor1__(this, expression)
      AddArguments(this, arguments)
    end
    AddArgument = function (this, argument)
      this.ArgumentList:AddArgument1(argument)
    end
    AddArguments = function (this, arguments)
      this.ArgumentList:AddArguments(arguments)
    end
    Render = function (this, renderer)
      renderer:Render4(this)
    end
    return {
      __inherits__ = function (global)
        return {
          global.CSharpLua.LuaAst.LuaExpressionSyntax
        }
      end,
      AddArgument = AddArgument,
      AddArguments = AddArguments,
      Render = Render,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__,
        __ctor4__,
        __ctor5__,
        __ctor6__
      }
    }
  end)
end)
